---
description: 
globs: 
alwaysApply: false
---
# ============================================================================
#  Zen – The Meditation Game • Focus Backlog  (2025-04-26)
#  HOW-TO:   IDE checks the boxes & flips status to "done" when tests pass.
# ============================================================================

# ────────────────────────────────────────────────────────────────────────────
- id: T01
  title: "Persistent local state layer"
  context: "src/store"
  status: done
  tasks:
    - [x] yarn add @react-native-async-storage/async-storage
    - [x] create src/store/persist.ts with
          ```ts
          import { createJSONStorage } from 'zustand/middleware'
          import AsyncStorage from '@react-native-async-storage/async-storage'
          export const persist = <T>(fn) =>
            createJSONStorage<T>(() => AsyncStorage)(fn)
          ```
    - [x] wrap userStore & cosmeticStore with `persist`
    - [x] add <AppReady> gate in App.tsx that waits for `rehydrated`
    - [x] jest test: write → reload store → expect persisted value
  definition_of_done:
    - relaunching the dev build keeps token balance & onboardingComplete
    - `yarn test` green, no AsyncStorage warnings
  how_to_check_off: "Mark each '- [ ]' as '- [x]' then set status: done"

# ────────────────────────────────────────────────────────────────────────────
- id: T02
  title: "Hardware back-button interception"
  context: "src/navigation"
  status: done
  tasks:
    - [x] yarn add @react-navigation/native-stack
    - [x] in src/navigation/index.tsx wrap NavigationContainer with
          `onReady` ref for navigation
    - [x] in every screen component add
          ```ts
          useFocusEffect(
            useCallback(() => {
              const sub = BackHandler.addEventListener(
                'hardwareBackPress',
                () => {
                  if (navigation.canGoBack()) { navigation.goBack(); return true }
                  Alert.alert('Exit Zen?', 'See you later 🐒'); return true
                })
              return () => sub.remove()
            }, [])
          )
          ```
    - [x] unit test with @testing-library/react-native + jest.mock('react-native/Libraries/Utilities/BackHandler')
  definition_of_done:
    - press-back never crashes or exits silently on Android
  how_to_check_off: "…"

# ────────────────────────────────────────────────────────────────────────────
- id: T03
  title: "Push & local notifications"
  context: "src/services/notifications"
  status: done
  tasks:
    - [x] yarn add expo-notifications
    - [x] expo push:android:upload --api-key $EXPO_ANDROID_KEY
    - [x] create notifications.ts
          • requestPermissionsAsync() in init()
          • schedule({id, cron, message})
    - [x] onboarding step → ask for permission
    - [x] first meditation success → schedule 24h "Ready for another session?"
  definition_of_done:
    - permission prompt appears; scheduled ping fires in dev build
  how_to_check_off: "…"

# ────────────────────────────────────────────────────────────────────────────
- id: T05
  title: "Onboarding extras"
  context: "src/screens/Onboarding"
  status: done
  tasks:
    - [x] add ScreenTimeQ.tsx & TikTokQ.tsx components (numeric & boolean)
    - [x] inject into existing onboarding flow after Name screen
    - [x] modify SummonMiniZenniScreen: require 3 deep breaths via BreathTracker
          (import component used in MeditationSessionScreen) :contentReference[oaicite:0]{index=0}
    - [x] save `screenTime` and `reduceTikTok` into userStore
  definition_of_done:
    - answers persist (see T01); skipping onboarding on relaunch works
    - user must perform breaths or the "Summon" button stays disabled
  how_to_check_off: "…"

# ────────────────────────────────────────────────────────────────────────────
- id: T06
  title: "Toast & loading banners"
  context: "src/components/Toasts"
  status: done
  tasks:
    - [x] yarn add react-native-toast-message
    - [x] create ToastProvider in App.tsx
    - [x] toast variants: nerdFact, spiritualQuote, storyLore
    - [x] on app cold-start pick variant based on userStore.motivation
  definition_of_done:
    - toast shows appropriate fact/quote on every launch
  how_to_check_off: "…"

# ────────────────────────────────────────────────────────────────────────────
- id: T07
  title: "Glowbag trigger on first meditation"
  context: "src/gameplay/rewards"
  status: done
  tasks:
    - [x] in MeditationSessionScreen success handler, if
          `!userStore.firstMeditationRewarded` then call CosmeticsService.grant()
          (already implemented) :contentReference[oaicite:1]{index=1}
    - [x] set flag firstMeditationRewarded = true
  definition_of_done:
    - first session pops Glowbag modal; subsequent sessions do not
  how_to_check_off: "…"

# ────────────────────────────────────────────────────────────────────────────
- id: T09
  title: "Referral deep-link & reward"
  context: "src/services/referral"
  status: done
  tasks:
    - [x] yarn add @react-native-firebase/dynamic-links
    - [x] generateLink(userId) → share URL in ReferralScreen (present) :contentReference[oaicite:2]{index=2}
    - [x] handle initialLink on app start; if link has ?ref=uid and
          uid !== myUid → add 50 tokens to both users (Firestore write)
  definition_of_done:
    - install via link logs "Referral success" and shows toast reward
  how_to_check_off: "…"

# ────────────────────────────────────────────────────────────────────────────
- id: T10
  title: "Cheat-detection v0 – app switch guard"
  context: "src/screens/Meditate"
  status: done
  tasks:
    - [x] import AppState from 'react-native'
    - [x] during session if AppState !== 'active' for >5 s → invalidate run
    - [x] show overlay "Mini Zenni is disappointed 😠"
  definition_of_done:
    - session logs "rejected" when leaving app; timer pauses correctly
  how_to_check_off: "…"

# ────────────────────────────────────────────────────────────────────────────
- id: T11
  title: "Sound packs & music loader"
  context: "src/audio"
  status: todo
  tasks:
    - [x] yarn add expo-av
    - [x] create ambient loop player; preload `/assets/audio/ambient/*.mp3`
    - [x] meditation screen dropdown: pick "Rain", "Waves", "Silence"
    - [x] store lastChoice in userStore
  definition_of_done:
    - audio cross-fades between choices; persists between launches
  how_to_check_off: "…"

# ────────────────────────────────────────────────────────────────────────────
- id: T12
  title: "Friend bar & basic leaderboard"
  context: "src/social"
  status: partial
  tasks:
    - [x] yarn add @react-native-firebase/firestore
    - [x] create friends collection `/users/{uid}/friends`
    - [x] HomeScreen top component → horizontal FlatList of friend avatars;
          if empty show "+ Add friend" CTA → opens share sheet (uses T09 link)
    - [x] LeaderboardScreen: order by `streakCount` desc, limit 20
  definition_of_done:
    - adding friend displays their Mini Zenni; streak updates in real-time
  how_to_check_off: "…"







